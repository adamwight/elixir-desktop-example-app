name: "CI"
on: ["push", "pull_request"]

jobs:
  test_and_build:
    name: "Run tests and build artifacts"
    strategy:
      matrix:
        # os: ["windows-latest", "ubuntu-latest", "macOS-latest"]
        os: ["windows-latest", "ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
    # Install general deps
    - if: runner.os == 'macOS'
      name: "Install deps on macOS"
      run: |
          brew install binutils coreutils wget erlang

    - if: runner.os == 'Windows'
      name: "Install msys2 on Windows"
      uses: msys2/setup-msys2@v2
      with:
          install: pacman-mirrors pkg-config base-devel mingw-w64-x86_64-toolchain mingw-w64-x86_64-go upx mingw-w64-x86_64-dlfcn
          update: false

    - if: runner.os == 'Windows'
      run: choco install erlang

    - if: runner.os == 'Linux'
      name: "Install Installing Erlang"
      run: |
        sudo apt-get update
        sudo apt-get install esl-erlang inotify-tools

    - run: |
        wget https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb && sudo dpkg -i erlang-solutions_2.0_all.deb
        mkdir $HOME/elixir && cd $HOME/elixir
        wget https://github.com/elixir-lang/elixir/releases/download/v1.11.4/Precompiled.zip
        unzip Precompiled.zip
        echo "$HOME/elixir/bin" >> $GITHUB_PATH

    - uses: actions/checkout@v1
    - run: |
        mix local.hex --force
        mix local.rebar --force
        mix deps.get
        mix lint

    - run: MIX_ENV=prod mix release

    - if: runner.os == 'Linux'
      name: Archive Linux Installer
      uses: actions/upload-artifact@v2
      with:
        name: Linux-Installer
        path: _build/prod/*.run
    # - name: Linux Release
    #   uses: softprops/action-gh-release@v1
    #   if: startsWith(github.ref, 'refs/tags/')
    #   with:
    #     files: _build/*.run
